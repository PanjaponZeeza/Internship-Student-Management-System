// Dashboard.jsx - Component ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (dashboard) ‡∏ó‡∏∏‡∏Å role
// ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token, role, ‡πÅ‡∏•‡∏∞ routing ‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
// ‡∏ñ‡πâ‡∏≤ token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏/‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚Üí redirect ‡πÑ‡∏õ login
// ‡∏ñ‡πâ‡∏≤ path ‡πÄ‡∏õ‡πá‡∏ô /dashboard ‡∏ï‡∏£‡∏á‡πÜ ‚Üí redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ dashboard ‡∏ï‡∏≤‡∏° role (admin, student, supervisor)
// ‡∏ñ‡πâ‡∏≤ token ‡πÅ‡∏•‡∏∞ role ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚Üí ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Layout ‡πÅ‡∏•‡∏∞ render <Outlet /> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏π‡∏Å‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö dashboard

import { useAuth } from "../../context/AuthContext";
import { Navigate, Outlet, useLocation } from "react-router-dom";
import Layout from "../../components/Layout";

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ JWT token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function isTokenExpired(token) {
  if (!token) return true;
  try {
    const payload = JSON.parse(atob(token.split(".")[1]));
    const expiry = payload.exp;
    const now = Math.floor(Date.now() / 1000);
    return now >= expiry;
  } catch {
    return true;
  }
}

export default function Dashboard() {
  const { token, logout } = useAuth();
  const location = useLocation();

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏à‡∏∞ logout ‡πÅ‡∏•‡∏∞ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
  if (!token || isTokenExpired(token)) {
    alert("Session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    logout();
    return <Navigate to="/" />;
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• payload ‡∏à‡∏≤‡∏Å token ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö role
  let payload = {};
  try {
    payload = JSON.parse(atob(token.split(".")[1]));
  } catch (e) {
    console.error("Invalid token payload:", e);
    logout();
    return <Navigate to="/" />;
  }

  const role = payload?.role;

  // ‡∏ñ‡πâ‡∏≤ role ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á error
  if (!["admin", "student", "supervisor"].includes(role)) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-[#F3F4F6]">
        <p className="text-red-600 text-lg font-semibold">
          üö´ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á (Invalid Role)
        </p>
      </div>
    );
  }

  // ‡∏ñ‡πâ‡∏≤ path ‡πÄ‡∏õ‡πá‡∏ô /dashboard ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏ï‡∏≤‡∏° role
  if (location.pathname === "/dashboard") {
    return <Navigate to={`/dashboard/${role}`} replace />;
  }

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Layout ‡∏û‡∏£‡πâ‡∏≠‡∏° Outlet (child routes)
  return (
    <Layout>
      <Outlet />
    </Layout>
  );
}
