// App.jsx ‚Äî ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Routing ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏Ø ‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ React Router ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô

import { BrowserRouter, Routes, Route, Navigate } from "react-router-dom";
import Login from "./pages/auth/Login";
import Dashboard from "./pages/dashboards/Dashboard";
import StudentDashboard from "./pages/dashboards/StudentDashboard";
import SupervisorDashboard from "./pages/dashboards/SupervisorDashboard";
import AdminOverview from "./pages/admin/AdminOverview";
import ManageUsers from "./pages/admin/ManageUsers";
import ManageStudents from "./pages/admin/ManageStudents";
import ManagePrograms from "./pages/admin/ManagePrograms";
import ChangePassword from "./pages/profile/ChangePassword";
import { AuthProvider, useAuth } from "./context/AuthContext";

// üîî Toast
import { Toaster } from 'react-hot-toast';

// PrivateRoute ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô route ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô (‡πÄ‡∏ä‡πá‡∏Ñ token)
function PrivateRoute({ children }) {
  const { token } = useAuth();
  return token ? children : <Navigate to="/" />;
}

function App() {
  return (
    <AuthProvider>
      {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° Toaster ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ */}
      <Toaster position="top-right" reverseOrder={false} />
      <BrowserRouter>
        <Routes>
          {/* üîí ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å = Login (‡πÑ‡∏°‡πà‡∏°‡∏µ Register) */}
          <Route path="/" element={<Login />} />

          {/* ‚úÖ Dashboard (‡πÄ‡∏õ‡πá‡∏ô Layout ‡∏´‡∏•‡∏±‡∏Å) ‡∏°‡∏µ Outlet ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö route ‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ role */}
          <Route
            path="/dashboard"
            element={
              <PrivateRoute>
                <Dashboard />
              </PrivateRoute>
            }
          >
            {/* üëá Routing ‡∏¢‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ú‡πà‡∏≤‡∏ô <Outlet /> ‡πÉ‡∏ô Dashboard.jsx */}
            {/* Student Dashboard */}
            <Route path="student" element={<StudentDashboard />} />
            {/* Supervisor Dashboard */}
            <Route path="supervisor" element={<SupervisorDashboard />} />
            {/* Admin Overview (‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å admin) */}
            <Route path="admin" element={<AdminOverview />} />
            {/* Admin ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
            <Route path="admin/manage-users" element={<ManageUsers />} />
            {/* Admin ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ */}
            <Route path="admin/manage-students" element={<ManageStudents />} />
            {/* Admin ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô */}
            <Route path="admin/manage-programs" element={<ManagePrograms />} />
          </Route>

          {/* ‚úÖ Route ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡∏ó‡∏∏‡∏Å role ‡πÉ‡∏ä‡πâ path ‡∏ô‡∏µ‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô) */}
          <Route
            path="/change-password"
            element={
              <PrivateRoute>
                <ChangePassword />
              </PrivateRoute>
            }
          />
        </Routes>
      </BrowserRouter>
    </AuthProvider>
  );
}

export default App;
